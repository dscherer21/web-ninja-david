{"version":3,"sources":["components/header.js","components/landingPage.js","components/footer.js","components/projectsPage.js","components/contactPage.js","components/socialMediaLinks.js","App.js","serviceWorker.js","index.js"],"names":["Header","to","LandingPage","Footer","ProjectsPage","ContactPage","SocialMediaLinks","href","target","rel","App","className","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+QAwBeA,MArBf,WAEE,OACE,gCACI,gDACA,oDACA,4BACE,4BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,SAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,aAAT,aAEF,4BACE,kBAAC,IAAD,CAAMA,GAAG,YAAT,eCNGC,MATf,WAEE,OACE,8BACI,gECKOC,MATf,WAEE,OACE,gCACI,sDCKOC,MATf,WAEE,OACE,8BACI,iECKOC,MATf,WAEE,OACE,8BACI,gECgBOC,MApBf,WAEE,OACE,2EAEI,4BACE,4BACE,uBAAGC,KAAK,mDAAmDC,OAAO,SAASC,IAAI,uBAA/E,aAEF,4BACE,uBAAGF,KAAK,4CAA4CC,OAAO,SAASC,IAAI,uBAAxE,aAEF,4BACE,uBAAGF,KAAK,gCAAgCC,OAAO,SAASC,IAAI,uBAA5D,cCwBGC,MAvBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,QAGJ,kBAAC,EAAD,MACA,kBAAC,EAAD,SCrBYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f1ebd68d.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header() {\r\n  \r\n  return (\r\n    <header>\r\n        <div>Web-Ninja David</div>\r\n        <div>This is the Header!</div>\r\n        <ul>\r\n          <li>\r\n            <Link to='/'>Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to='/projects'>Projects</Link>\r\n          </li>\r\n          <li>\r\n            <Link to='/contact'>Contact</Link>\r\n          </li>\r\n        </ul>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nfunction LandingPage() {\r\n  \r\n  return (\r\n    <main>\r\n        <div>This is the LandingPage body!</div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default LandingPage;","import React from 'react';\r\n\r\nfunction Footer() {\r\n  \r\n  return (\r\n    <footer>\r\n        <div>This is the footer!</div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction ProjectsPage() {\r\n  \r\n  return (\r\n    <main>\r\n        <div>This is the ProjectsPage body!</div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default ProjectsPage;","import React from 'react';\r\n\r\nfunction ContactPage() {\r\n  \r\n  return (\r\n    <main>\r\n        <div>This is the ContactPage body!</div>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default ContactPage;","import React from 'react';\r\n\r\nfunction SocialMediaLinks() {\r\n  \r\n  return (\r\n    <section>\r\n        This is the Social Media Links Section!\r\n        <ul>\r\n          <li>\r\n            <a href='https://www.linkedin.com/in/david-scherer-odell/' target='_blank' rel=\"noopener noreferrer\">Linkedin</a>\r\n          </li>\r\n          <li>\r\n            <a href='https://www.facebook.com/david.scherer.77' target='_blank' rel=\"noopener noreferrer\">Facebook</a>\r\n          </li>\r\n          <li>\r\n            <a href='https://github.com/dscherer21' target='_blank' rel=\"noopener noreferrer\">Github</a>\r\n          </li>\r\n        </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SocialMediaLinks;","import React from 'react';\nimport './App.css';\n//Importing React-Router-Dom for client-side routing\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport Header from './components/header';\nimport LandingPage from './components/landingPage';\nimport Footer from './components/footer';\nimport ProjectsPage from './components/projectsPage';\nimport ContactPage from './components/contactPage';\nimport SocialMediaLinks from './components/socialMediaLinks';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header/>\n        <Switch>\n          <Route exact path='/'>\n            <LandingPage/>\n          </Route>\n          <Route path='/projects'>\n            <ProjectsPage/>\n          </Route>\n          <Route path='/contact'>\n            <ContactPage/>\n          </Route>\n        </Switch>\n        <SocialMediaLinks/>\n        <Footer/>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}